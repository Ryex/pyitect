ChangeLog
==========

v1.1.0
------
- readme cleanup
- gen_version generates a version 2 tuple
- change on_enable to a callable path in the imported plugin module

v1.0.1
------
- change out Version mechanism for a local parse method based off of LooseVersion
- update tests to proper unit tests

v1.0.0
------
- change from parse_version from setuptools to LooseVersion in distutils

v0.9.2
------
- Ensure plugin configuration json file is closed @svisser

v0.9.1
------
- files loaded with `exec` give proper file path
- proper trace back given when component fail to load (even when it's a recursion error)
- add `component_mapped` event

v0.9.0
------
- add `get_plugin_module` method

v0.8.0
------
- Added ability to run code when a plugin is enabled via `"on_enable"` property

v0.7.2
------
- Fix name error in unbind and fire event commands

v0.7.0
------
- plugins found with `System.search` are no longer auto enabeled
- use `System.enable_plugins(<mapping>|<iterable>|<Plugin>)` to enable plugins from `System.plugins`
- added `Plugin` class to main namespace

v0.6.2
------
- relative imports now work so long as the target file for loading is named `__init__.py` to trigger python to treat the plugin folder as a package

v0.6.1
------
- re-factored System.load out to make use of two smaller functions, easyer to maintain
- added plugin loading modes, import for py3.4+ and exec for support of previous python version

v0.5.1
------
- added ability to provide more than one version of a component in the same plugin with potfix mapping
- event system added, system fire events
- made requirement overwrite system defaults, removed bypass peram
- ittrPluginsByComponent lists potfix mappings too.
- tests updates to test all features
- README update
- This changelog added

v0.1.15
-------
- added ittrPluginsByComponent
- added bypass peram to System.load to bypass system default

v0.1.10
-------
- First public release
